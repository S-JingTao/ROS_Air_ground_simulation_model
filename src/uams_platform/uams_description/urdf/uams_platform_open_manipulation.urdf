<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from uams_platform_open_manipulation.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="uams_platform">
  <!-- =============================================================== -->
  <!-- ==================== ROS INTERFACE MACRO ====================== -->
  <!-- =============================================================== -->
  <!-- <xacro:macro 
  		name="ros_interface_plugin_macro"
  		params="namespace">
    <gazebo>
      <plugin name="ros_interface_plugin" filename="librotors_gazebo_ros_interface_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
      </plugin>
    </gazebo>
  </xacro:macro>-->
  <link name="neo11/base_link"/>
  <joint name="neo11/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="neo11/base_link"/>
    <child link="neo11/base_link_inertia"/>
  </joint>
  <link name="neo11/base_link_inertia">
    <inertial>
      <mass value="3.42"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="6.08870e-02" ixy="0.0" ixz="0.0" iyy="6.87913e-02" iyz="0.0" izz="1.48916e-01"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.234"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
      <robotNamespace>neo11</robotNamespace>
      <linkName>neo11/base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <joint name="neo11/rotor_0_joint" type="continuous">
    <origin rpy="0.0872664625997 0 0.523598775598" xyz="0.247 0.1506 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_0"/>
  </joint>
  <link name="neo11/rotor_0">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_ccw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_front_left_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_0_joint</jointName>
      <linkName>neo11/rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_0">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="neo11/rotor_1_joint" type="continuous">
    <origin rpy="0 -0.0872664625997 0" xyz="-0.00067 0.28929 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_1"/>
  </joint>
  <link name="neo11/rotor_1">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_cw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_left_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_1_joint</jointName>
      <linkName>neo11/rotor_1</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_1">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="neo11/rotor_2_joint" type="continuous">
    <origin rpy="0.0872664625997 0 2.61799387799" xyz="-0.2501 0.1454 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_2"/>
  </joint>
  <link name="neo11/rotor_2">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_ccw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_back_left_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_2_joint</jointName>
      <linkName>neo11/rotor_2</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_2">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="neo11/rotor_3_joint" type="continuous">
    <origin rpy="-0.0872664625997 0 -2.61799387799" xyz="-0.2501 -0.1454 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_3"/>
  </joint>
  <link name="neo11/rotor_3">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_cw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_back_right_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_3_joint</jointName>
      <linkName>neo11/rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_3">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="neo11/rotor_4_joint" type="continuous">
    <origin rpy="0 0.0872664625997 3.14159265359" xyz="-0.00067 -0.28929 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_4"/>
  </joint>
  <link name="neo11/rotor_4">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_ccw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_right_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_4_joint</jointName>
      <linkName>neo11/rotor_4</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>4</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/4</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_4">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="neo11/rotor_5_joint" type="continuous">
    <origin rpy="-0.0872664625997 0 -0.523598775598" xyz="0.247 -0.1506 0.028"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="neo11/base_link"/>
    <child link="neo11/rotor_5"/>
  </joint>
  <link name="neo11/rotor_5">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.7499961e-07" ixy="0.0" ixz="0.0" iyy="8.13545091248e-05" iyz="0.0" izz="8.22545087648e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://rotors_description/meshes/neo11_propeller_cw.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1397"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="neo11_front_right_motor_model">
      <robotNamespace>neo11</robotNamespace>
      <jointName>neo11/rotor_5_joint</jointName>
      <linkName>neo11/rotor_5</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0182</timeConstantUp>
      <timeConstantDown>0.0182</timeConstantDown>
      <maxRotVelocity>1047.2</maxRotVelocity>
      <motorConstant>1.269e-05</motorConstant>
      <momentConstant>0.016754</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>5</motorNumber>
      <rotorDragCoefficient>0.00020673</rotorDragCoefficient>
      <rollingMomentCoefficient>0.0</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/5</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="neo11/rotor_5">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo>
    <plugin filename="librotors_gazebo_controller_interface.so" name="controller_interface">
      <robotNamespace>neo11</robotNamespace>
      <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
      <commandRateThrustSubTopic>command/rate</commandRateThrustSubTopic>
      <commandMotorSpeedSubTopic>command/motor_speed</commandMotorSpeedSubTopic>
      <imuSubTopic>imu</imuSubTopic>
      <motorSpeedCommandPubTopic>gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    </plugin>
  </gazebo>
  <!-- IMU link -->
  <link name="neo11/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="neo11/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="neo11/base_link"/>
    <child link="neo11/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>neo11</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>neo11/imu_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- IMU link -->
  <link name="neo11/imugt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="neo11/imugt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="neo11/base_link"/>
    <child link="neo11/imugt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imugt_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>neo11</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>neo11/imugt_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>ground_truth/imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>0.0</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.0</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.0</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.0</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- odometry link -->
  <link name="neo11/odometry_sensorgt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="neo11/odometry_sensorgt_joint" type="revolute">
    <parent link="neo11/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="neo11/odometry_sensorgt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensorgt">
      <linkName>neo11/odometry_sensorgt_link</linkName>
      <robotNamespace>neo11</robotNamespace>
      <poseTopic>ground_truth/pose</poseTopic>
      <poseWithCovarianceTopic>ground_truth/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>ground_truth/position</positionTopic>
      <transformTopic>ground_truth/transform</transformTopic>
      <odometryTopic>ground_truth/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>neo11/base_link</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>
  <!-- odometry link -->
  <link name="neo11/odometry_sensor1_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="neo11/odometry_sensor1_joint" type="revolute">
    <parent link="neo11/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="neo11/odometry_sensor1_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensor1">
      <linkName>neo11/odometry_sensor1_link</linkName>
      <robotNamespace>neo11</robotNamespace>
      <poseTopic>odometry_sensor1/pose</poseTopic>
      <poseWithCovarianceTopic>odometry_sensor1/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>odometry_sensor1/position</positionTopic>
      <transformTopic>odometry_sensor1/transform</transformTopic>
      <odometryTopic>odometry_sensor1/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>neo11/odometry_sensor1</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <!-- World -->
  <gazebo reference="world"/>
  <gazebo reference="link1">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="link2">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="link3">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="link4">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="link5">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="gripper_link">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="gripper_link_sub">
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- end effector link -->
  <gazebo reference="end_effector_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <gazebo>
    <!-- loading plugin: mimic joints works in gazebo now -->
    <plugin filename="libroboticsgroup_gazebo_mimic_joint_plugin.so" name="gazebo_gripper_ros_control">
      <joint>gripper</joint>
      <mimicJoint>gripper_sub</mimicJoint>
      <multiplier>1.0</multiplier>
      <offset>0.0</offset>
    </plugin>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name="intel_realsense_r200" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.02974</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera/color</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint3">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint4">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran5">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="gripper">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor5">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="tran6">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="gripper_sub">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor6">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Link 1 -->
  <link name="link1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link1.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link1.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="3.0876154e-04 0.0000000e+00 -1.2176461e-04"/>
      <mass value="7.9119962e-02"/>
      <inertia ixx="1.2505234e-05" ixy="0.0" ixz="-1.7855208e-07" iyy="2.1898364e-05" iyz="0.0" izz="1.9267361e-05"/>
    </inertial>
  </link>
  <!-- Joint 1 -->
  <joint name="joint1" type="revolute">
    <parent link="link1"/>
    <child link="link2"/>
    <origin rpy="0 0 0" xyz="0.012 0.0 0.017"/>
    <axis xyz="0 0 1"/>
    <limit effort="1" lower="-2.82743338823" upper="2.82743338823" velocity="4.8"/>
  </joint>
  <!--  Link 2 -->
  <link name="link2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.019"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.019"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="-3.0184870e-04 5.4043684e-04 0.047433464"/>
      <mass value="9.8406837e-02"/>
      <inertia ixx="3.4543422e-05" ixy="-1.6031095e-08" ixz="-3.8375155e-07" iyy="3.2689329e-05" iyz="2.8511935e-08" izz="1.8850320e-05"/>
    </inertial>
  </link>
  <!--  Joint 2 -->
  <joint name="joint2" type="revolute">
    <parent link="link2"/>
    <child link="link3"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0595"/>
    <axis xyz="0 1 0"/>
    <limit effort="1" lower="-1.79070781255" upper="1.5707963268" velocity="4.8"/>
  </joint>
  <!--  Link 3 -->
  <link name="link3">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link3.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link3.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="1.0308393e-02 3.7743363e-04 1.0170197e-01"/>
      <mass value="1.3850917e-01"/>
      <inertia ixx="3.3055381e-04" ixy="-9.7940978e-08" ixz="-3.8505711e-05" iyy="3.4290447e-04" iyz="-1.5717516e-06" izz="6.0346498e-05"/>
    </inertial>
  </link>
  <!--  Joint 3 -->
  <joint name="joint3" type="revolute">
    <parent link="link3"/>
    <child link="link4"/>
    <origin rpy="0 0 0" xyz="0.024 0 0.128"/>
    <axis xyz="0 1 0"/>
    <limit effort="1" lower="-0.942477796077" upper="1.38230076758" velocity="4.8"/>
  </joint>
  <!--  Link 4 -->
  <link name="link4">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link4.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link4.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="9.0909590e-02 3.8929816e-04 2.2413279e-04"/>
      <mass value="1.3274562e-01"/>
      <inertia ixx="3.0654178e-05" ixy="-1.2764155e-06" ixz="-2.6874417e-07" iyy="2.4230292e-04" iyz="1.1559550e-08" izz="2.5155057e-04"/>
    </inertial>
  </link>
  <!--  Joint 4 -->
  <joint name="joint4" type="revolute">
    <parent link="link4"/>
    <child link="link5"/>
    <origin rpy="0 0 0" xyz="0.124 0.0 0.0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1" lower="-1.79070781255" upper="2.04203522483" velocity="4.8"/>
  </joint>
  <!--  Link 5 -->
  <link name="link5">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link5.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link5.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="4.4206755e-02 3.6839985e-07 8.9142216e-03"/>
      <mass value="1.4327573e-01"/>
      <inertia ixx="8.0870749e-05" ixy="0.0" ixz="-1.0157896e-06" iyy="7.5980465e-05" iyz="0.0" izz="9.3127351e-05"/>
    </inertial>
  </link>
  <!--  Gripper joint -->
  <joint name="gripper" type="prismatic">
    <parent link="link5"/>
    <child link="gripper_link"/>
    <origin rpy="0 0 0" xyz="0.0817 0.021 0.0"/>
    <axis xyz="0 1 0"/>
    <limit effort="1" lower="-0.010" upper="0.019" velocity="4.8"/>
  </joint>
  <!--  Gripper link -->
  <link name="gripper_link">
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link_grip_l.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link_grip_l.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="1.0e-03"/>
      <inertia ixx="1.0e-03" ixy="0.0" ixz="0.0" iyy="1.0e-03" iyz="0.0" izz="1.0e-03"/>
    </inertial>
  </link>
  <!--  Gripper joint sub -->
  <joint name="gripper_sub" type="prismatic">
    <parent link="link5"/>
    <child link="gripper_link_sub"/>
    <origin rpy="0 0 0" xyz="0.0817 -0.021 0"/>
    <axis xyz="0 -1 0"/>
    <limit effort="1" lower="-0.010" upper="0.019" velocity="4.8"/>
    <mimic joint="gripper" multiplier="1"/>
  </joint>
  <!--  Gripper link sub -->
  <link name="gripper_link_sub">
    <visual>
      <origin rpy="0 0 0" xyz="0.0 -0.0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link_grip_r.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 -0.0 0"/>
      <geometry>
        <mesh filename="package://open_manipulator_description/meshes/chain_link_grip_r.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="1.0e-03"/>
      <inertia ixx="1.0e-03" ixy="0.0" ixz="0.0" iyy="1.0e-03" iyz="0.0" izz="1.0e-03"/>
    </inertial>
  </link>
  <!-- end effector joint -->
  <joint name="end_effector_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.126 0.0 0.0"/>
    <parent link="link5"/>
    <child link="end_effector_link"/>
  </joint>
  <!-- end effector link -->
  <link name="end_effector_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="1.0e-03"/>
      <inertia ixx="1.0e-03" ixy="0.0" ixz="0.0" iyy="1.0e-03" iyz="0.0" izz="1.0e-03"/>
    </inertial>
  </link>
  <!-- Realsense Camera Joint Position -->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.070 0.032 0.052"/>
    <parent link="link5"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link"/>
  <material name="aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="plastic">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <joint name="vehicle_joint" type="fixed">
    <parent link="neo11/base_link_inertia"/>
    <child link="link1"/>
    <origin rpy="0.0 3.14159265359 1.5707963268" xyz="0.0 0.0 0"/>
  </joint>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="depth_camera_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0 -0.03 -0.02"/>
    <parent link="camera_link"/>
    <child link="depth_camera_bottom_screw_frame"/>
  </joint>
  <link name="depth_camera_bottom_screw_frame"/>
  <joint name="depth_camera_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0106 0.0175 0.0125"/>
    <parent link="depth_camera_bottom_screw_frame"/>
    <child link="depth_camera_link"/>
  </joint>
  <link name="depth_camera_link">
    <visual>
      <!-- the mesh origin is at front plate in between the two infrared camera axes -->
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0.0043 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://realsense2_description/meshes/d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <!-- The following are not reliable values, and should not be used for modeling -->
      <mass value="0.072"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257"/>
    </inertial>
  </link>
</robot>

